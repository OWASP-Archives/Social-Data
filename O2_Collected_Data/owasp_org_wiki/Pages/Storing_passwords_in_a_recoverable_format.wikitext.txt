{{Template:SecureSoftware}}
{{Template:Vulnerability}}

Last revision (mm/dd/yy): '''{{REVISIONMONTH}}/{{REVISIONDAY}}/{{REVISIONYEAR}}'''

[[ASDR_TOC_Vulnerabilities|Vulnerabilities Table of Contents]]

==Description==
The storage of passwords in a recoverable format makes them subject to password reuse attacks by malicious users. If a system administrator can recover the password directly, or use a brute force search on the information available to him, he can use the password on other accounts.

'''Consequences'''

* Confidentiality: Users' passwords may be revealed.
* Authentication: Revealed passwords may be reused elsewhere to impersonate the users in question.

'''Exposure period'''

* Design: The method of password storage and use is often decided at design time.
* Implementation: In some cases, the decision of algorithms for password encryption or hashing may be left to the implementers.

'''Platform'''

* Languages: All
* Operating platforms: All 

'''Required resources'''

Access to read stored password hashes

'''Severity'''

Medium to High

'''Likelihood of exploit'''

Very High

The use of recoverable passwords significantly increases the chance that passwords will be used maliciously. In fact, it should be noted that recoverable encrypted passwords provide no significant benefit over plain-text passwords since they are subject not only to reuse by malicious attackers but also by malicious insiders. 

==Risk Factors==

TBD

==Examples==

In C\C  :

<pre>
int VerifyAdmin(char *password) {
 
  if (strcmp(compress(password), compressed_password)) {
    printf("Incorrect Password!\n");
    return(0)
  }

  printf("Entering Diagnostic Modeï¿½\n");
  return(1);
}
</pre>

In Java:

<pre>
int VerifyAdmin(String password) {
  
  if (passwd.Eqauls(compress((compressed_password)) {
    return()0)
  }
//Diagnostic Mode
  return(1);
}
</pre>


==Related [[Attacks]]==

* [[Attack 1]]
* [[Attack 2]]


==Related [[Vulnerabilities]]==

* [[Use of hard-coded passwords]]


==Related [[Controls]]==

* Design / Implementation: Ensure that strong, non-reversible encryption is used to protect stored passwords.



==Related [[Technical Impacts]]==

* [[Technical Impact 1]]
* [[Technical Impact 2]]


==References==
Note: A reference to related [http://cwe.mitre.org/ CWE] or [http://capec.mitre.org/ CAPEC] article should be added when exists. Eg:

* [http://cwe.mitre.org/data/definitions/79.html CWE 79].
* http://www.link1.com
* [http://www.link2.com Title for the link2]

[[Category:FIXME|add links

In addition, one should classify vulnerability based on the following subcategories: Ex:<nowiki>[[Category:Error Handling Vulnerability]]</nowiki>

Availability Vulnerability

Authorization Vulnerability

Authentication Vulnerability

Concurrency Vulnerability

Configuration Vulnerability

Cryptographic Vulnerability

Encoding Vulnerability

Error Handling Vulnerability

Input Validation Vulnerability

Logging and Auditing Vulnerability

Session Management Vulnerability]]

__NOTOC__


[[Category:OWASP ASDR Project]]
[[Category:Vulnerability]]
[[Category:Protocol Errors]]
[[Category:OWASP_CLASP_Project]]