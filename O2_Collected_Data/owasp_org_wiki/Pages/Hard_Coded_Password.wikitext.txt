{{Template:Stub}} {{Template:Vulnerability}} 

Last revision (mm/dd/yy): '''{{REVISIONMONTH}}/{{REVISIONDAY}}/{{REVISIONYEAR}}''' 

[[ASDR TOC Vulnerabilities|Vulnerabilities Table of Contents]] 

== Description ==

Hardcoded passwords may compromise system security in a way that cannot be easily remedied.

It is never a good idea to hardcode a password. Not only does hardcoding a password allow all of the project's developers to view the password, it also makes fixing the problem extremely difficult. Once the code is in production, the password cannot be changed without patching the software. If the account protected by the password is compromised, the owners of the system will be forced to choose between security and availability.

== Risk Factors ==

TBD 

== Examples ==

This example shows how usernames and passwords can be included within HTML comments: 
<pre>&lt;form name="login" action="login.php" method="post" onSubmit="return email_Submit();"&gt;
    &lt;b&gt;Log in Address: &lt;/b&gt;
    &lt;input type="text" name="email" size="29" value=""&gt;
    &lt;b&gt;Password: &lt;/b&gt;
    &lt;input type="password" name="password" size="29" value=""&gt;

&lt;!-- Debugging credentials: wiki@owasp.org:abc123 --&gt;

&lt;/form&gt;</pre> 
<br>
The following code uses a hardcoded password to connect to a database: <br>
<pre>
	...
	DriverManager.getConnection(url, "scott", "tiger");
	...
</pre>
<br>
This code will run successfully, but anyone who has access to it will have access to the password. Once the program has shipped, there is no going back from the database user "scott" with a password of "tiger" unless the program is patched. A devious employee with access to this information can use it to break into the system. Even worse, if attackers have access to the bytecode for application, they can use the javap -c command to access the disassembled code, which will contain the values of the passwords used. The result of this operation might look something like the following for the example above:

<pre>
	javap -c ConnMngr.class
	
	22: ldc   #36; //String jdbc:mysql://ixne.com/rxsql
	24: ldc   #38; //String scott
	26: ldc   #17; //String tiger

</pre>
<br>

== Related [[Attacks]] ==

*[[Attack 1]] 
*[[Attack 2]]

<br> 

== Related [[Vulnerabilities]] ==

== Related [[Controls]] ==

*[[:Category:Authentication]]

== Related [[Technical Impacts]] ==

*[[Technical Impact 1]] 
*[[Technical Impact 2]]

<br> 

== References ==

TBD __NOTOC__ 

[[Category:OWASP_ASDR_Project]] [[Category:Password_Management_Vulnerability]] [[Category:Authentication_Vulnerability]] [[Category:Sensitive_Data_Protection_Vulnerability]] [[Category:Vulnerability]]