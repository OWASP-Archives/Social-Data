{{Template:Vulnerability}}
{{Template:SecureSoftware}}

Last revision (mm/dd/yy): '''{{REVISIONMONTH}}/{{REVISIONDAY}}/{{REVISIONYEAR}}'''

[[ASDR_TOC_Vulnerabilities|Vulnerabilities Table of Contents]]


==Description==

A non-final static field can be viewed and edited in dangerous ways.

'''Consequences'''

* Integrity: The object could potentially be tampered with.
* Confidentiality: The object could potentially allow the object to be read.

'''Exposure period'''

* Design through Implementation: This is a simple logical issue which can be easily remedied through simple protections.

'''Platform'''

* Languages: Java, C++
* Operating platforms: Any

'''Required resources'''

Any

'''Severity'''

Medium

'''Likelihood of exploit'''

High

Non-final fields, which are not public can be read and written to by arbitrary Java code. 


==Risk Factors==

* Talk about the [[OWASP Risk Rating Methodology|factors]] that make this vulnerability likely or unlikely to actually happen
* Discuss the technical impact of a successful exploit of this vulnerability
* Consider the likely [business impacts] of a successful attack


==Examples==

In C++:

<pre>
public int password r = 45;
</pre>

In Java:

<pre>
static public String r;
</pre>

This is a uninitiated static class which can be accessed without a get-accessor and changed without a set-accessor.


==Related [[Attacks]]==

* [[Attack 1]]
* [[Attack 2]]


==Related [[Vulnerabilities]]==

* [[Vulnerability 1]]
* [[Vulnerabiltiy 2]]

==Related [[Controls]]==

* Design through Implementation: Make any static fields private and final.



==Related [[Technical Impacts]]==

* [[Technical Impact 1]]
* [[Technical Impact 2]]


==References==
Note: A reference to related [http://cwe.mitre.org/ CWE] or [http://capec.mitre.org/ CAPEC] article should be added when exists. Eg:

* [http://cwe.mitre.org/data/definitions/79.html CWE 79].
* http://www.link1.com
* [http://www.link2.com Title for the link2]

[[Category:FIXME|add links

In addition, one should classify vulnerability based on the following subcategories: Ex:<nowiki>[[Category:Error Handling Vulnerability]]</nowiki>

Availability Vulnerability

Authorization Vulnerability

Authentication Vulnerability

Concurrency Vulnerability

Configuration Vulnerability

Cryptographic Vulnerability

Encoding Vulnerability

Error Handling Vulnerability

Input Validation Vulnerability

Logging and Auditing Vulnerability

Session Management Vulnerability]]

__NOTOC__


[[Category:OWASP ASDR Project]]
[[Category:Vulnerability]]
[[Category:Synchronization and Timing Vulnerability]]
[[Category:OWASP_CLASP_Project]]