{{Template:SecureSoftware}}
{{Template:Vulnerability}}

Last revision (mm/dd/yy): '''{{REVISIONMONTH}}/{{REVISIONDAY}}/{{REVISIONYEAR}}'''

[[ASDR_TOC_Vulnerabilities|Vulnerabilities Table of Contents]]

==Description==

If a certificate is used without first checking to ensure it was not revoked, the certificate may be compromised.

'''Consequences'''

* Authentication: Trust may be assigned to an entity who is not who it claims to be.
* Integrity: Data from an untrusted (and possibly malicious) source may be integrated. 
* Confidentiality: Data may be disclosed to an entity impersonating a trusted entity, resulting in information disclosure.

'''Exposure period'''

* Design: Checks for certificate revocation should be included in the design of a system.
* Design: One can choose to use a language which abstracts out this part of authentication and encryption.

'''Platform'''

* Languages: Any language which does not abstract out this part of the process
* Operating platforms: All

'''Required resources'''

Minor trust: Users must attempt to interact with the malicious system.

'''Severity'''

Medium

'''Likelihood of exploit'''

Medium

The failure to check for certificate revocation is a far more serious flaw than related certificate failures. This is because the use of any revoked certificate is almost certainly malicious. The most common reason for certificate revocation is compromise of the system in question, with the result that no legitimate servers will be using a revoked certificate, unless they are sorely out of sync. 



==Risk Factors==

TBD

==Examples==

In C/C++:

<pre>
if (!(cert = SSL_get_peer(certificate(ssl)) || !host)
... without a get_verify_results
</pre>


==Related [[Attacks]]==

* [[Attack 1]]
* [[Attack 2]]


==Related [[Vulnerabilities]]==

* [[Failure to follow chain of trust in certificate validation]]
* [[Failure to validate host-specific certificate data]]
* [[Key exchange without entity authentication]]

==Related [[Controls]]==

* Design: Ensure that certificates are checked for revoked status.


==Related [[Technical Impacts]]==

* [[Technical Impact 1]]
* [[Technical Impact 2]]


==References==
TBD

[[Category:FIXME|add links

In addition, one should classify vulnerability based on the following subcategories: Ex:<nowiki>[[Category:Error Handling Vulnerability]]</nowiki>

Availability Vulnerability

Authorization Vulnerability

Authentication Vulnerability

Concurrency Vulnerability

Configuration Vulnerability

Cryptographic Vulnerability

Encoding Vulnerability

Error Handling Vulnerability

Input Validation Vulnerability

Logging and Auditing Vulnerability

Session Management Vulnerability]]

__NOTOC__


[[Category:OWASP ASDR Project]]
[[Category:Vulnerability]]
[[Category:Protocol Errors]]
[[Category:OWASP_CLASP_Project]]